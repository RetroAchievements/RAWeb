CREATE TABLE IF NOT EXISTS "migrations" ("id" integer primary key autoincrement not null, "migration" varchar not null, "batch" integer not null);
CREATE TABLE IF NOT EXISTS "Console" ("ID" integer primary key autoincrement not null, "Name" varchar not null, "Created" datetime, "Updated" datetime, "name_full" varchar, "name_short" varchar, "manufacturer" varchar, "active" tinyint(1), "order_column" integer, "deleted_at" datetime);
CREATE TABLE IF NOT EXISTS "EmailConfirmations" ("id" integer primary key autoincrement not null, "User" varchar not null, "user_id" integer, "EmailCookie" varchar not null, "Expires" date not null);
CREATE INDEX "emailconfirmations_emailcookie_index" on "EmailConfirmations" ("EmailCookie");
CREATE TABLE IF NOT EXISTS "ForumCategory" ("ID" integer primary key autoincrement not null, "Name" varchar not null, "Description" varchar not null, "DisplayOrder" integer not null default '0', "Created" datetime, "Updated" datetime, "deleted_at" datetime);
CREATE TABLE IF NOT EXISTS "GameAlternatives" ("gameID" integer, "gameIDAlt" integer, "Created" datetime, "Updated" datetime);
CREATE INDEX "gamealternatives_gameid_index" on "GameAlternatives" ("gameID");
CREATE INDEX "gamealternatives_gameidalt_index" on "GameAlternatives" ("gameIDAlt");
CREATE TABLE IF NOT EXISTS "Rating" ("User" varchar not null, "RatingObjectType" integer not null, "RatingID" integer not null, "RatingValue" integer not null, "id" integer primary key autoincrement not null, "Created" datetime, "Updated" datetime, "user_id" integer, "ratable_model" varchar, "ratable_id" integer);
CREATE TABLE IF NOT EXISTS "StaticData" ("NumAchievements" integer not null, "NumAwarded" integer not null, "NumGames" integer not null, "NumRegisteredUsers" integer not null, "TotalPointsEarned" integer not null, "LastAchievementEarnedID" integer not null, "LastAchievementEarnedByUser" varchar not null, "LastAchievementEarnedAt" datetime not null default CURRENT_TIMESTAMP, "LastRegisteredUser" varchar not null, "LastRegisteredUserAt" datetime, "LastUpdatedGameID" integer not null, "LastUpdatedAchievementID" integer not null, "LastCreatedGameID" integer not null, "LastCreatedAchievementID" integer not null, "NextGameToScan" integer not null default '1', "NextUserIDToScan" integer not null default '1', "Event_AOTW_AchievementID" integer not null default '1', "Event_AOTW_ForumID" integer not null default '1', "Event_AOTW_StartAt" datetime, "num_hardcore_mastery_awards" integer not null default '0', "num_hardcore_game_beaten_awards" integer not null default '0', "last_game_hardcore_mastered_game_id" integer not null default '1', "last_game_hardcore_mastered_user_id" integer not null default '1', "last_game_hardcore_mastered_at" datetime, "last_game_hardcore_beaten_game_id" integer not null default '1', "last_game_hardcore_beaten_user_id" integer not null default '1', "last_game_hardcore_beaten_at" datetime);
CREATE TABLE IF NOT EXISTS "Votes" ("User" varchar not null, "AchievementID" integer not null, "Vote" integer not null, "id" integer primary key autoincrement not null, "Created" datetime, "Updated" datetime, "votable_model" varchar, "votable_id" integer, "user_id" integer);
CREATE TABLE IF NOT EXISTS "user_usernames" ("id" integer primary key autoincrement not null, "user_id" integer, "username" varchar not null, "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "UserAccounts"("ID") on delete set null);
CREATE UNIQUE INDEX "user_usernames_user_id_username_unique" on "user_usernames" ("user_id", "username");
CREATE INDEX "user_usernames_username_index" on "user_usernames" ("username");
CREATE TABLE IF NOT EXISTS "password_reset_tokens" ("email" varchar not null, "token" varchar not null, "created_at" datetime, primary key ("email"));
CREATE TABLE IF NOT EXISTS "sessions" ("id" varchar not null, "user_id" integer, "ip_address" varchar, "user_agent" text, "payload" text not null, "last_activity" integer not null, primary key ("id"));
CREATE INDEX "sessions_user_id_index" on "sessions" ("user_id");
CREATE INDEX "sessions_last_activity_index" on "sessions" ("last_activity");
CREATE TABLE IF NOT EXISTS "queue_jobs" ("id" integer primary key autoincrement not null, "queue" varchar not null, "payload" text not null, "attempts" integer not null, "reserved_at" integer, "available_at" integer not null, "created_at" integer not null);
CREATE INDEX "queue_jobs_queue_index" on "queue_jobs" ("queue");
CREATE TABLE IF NOT EXISTS "oauth_auth_codes" ("id" varchar not null, "user_id" integer not null, "client_id" integer not null, "scopes" text, "revoked" tinyint(1) not null, "expires_at" datetime, primary key ("id"));
CREATE INDEX "oauth_auth_codes_user_id_index" on "oauth_auth_codes" ("user_id");
CREATE TABLE IF NOT EXISTS "oauth_access_tokens" ("id" varchar not null, "user_id" integer, "client_id" integer not null, "name" varchar, "scopes" text, "revoked" tinyint(1) not null, "created_at" datetime, "updated_at" datetime, "expires_at" datetime, primary key ("id"));
CREATE INDEX "oauth_access_tokens_user_id_index" on "oauth_access_tokens" ("user_id");
CREATE TABLE IF NOT EXISTS "oauth_refresh_tokens" ("id" varchar not null, "access_token_id" varchar not null, "revoked" tinyint(1) not null, "expires_at" datetime, primary key ("id"));
CREATE INDEX "oauth_refresh_tokens_access_token_id_index" on "oauth_refresh_tokens" ("access_token_id");
CREATE TABLE IF NOT EXISTS "oauth_clients" ("id" integer primary key autoincrement not null, "user_id" integer, "name" varchar not null, "secret" varchar, "provider" varchar, "redirect" text not null, "personal_access_client" tinyint(1) not null, "password_client" tinyint(1) not null, "revoked" tinyint(1) not null, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "oauth_clients_user_id_index" on "oauth_clients" ("user_id");
CREATE TABLE IF NOT EXISTS "oauth_personal_access_clients" ("id" integer primary key autoincrement not null, "client_id" integer not null, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "personal_access_tokens" ("id" integer primary key autoincrement not null, "tokenable_type" varchar not null, "tokenable_id" integer not null, "name" varchar not null, "token" varchar not null, "abilities" text, "last_used_at" datetime, "expires_at" datetime, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "personal_access_tokens_tokenable_type_tokenable_id_index" on "personal_access_tokens" ("tokenable_type", "tokenable_id");
CREATE UNIQUE INDEX "personal_access_tokens_token_unique" on "personal_access_tokens" ("token");
CREATE TABLE IF NOT EXISTS "queue_failed_jobs" ("id" integer primary key autoincrement not null, "uuid" varchar not null, "connection" text not null, "queue" text not null, "payload" text not null, "exception" text not null, "failed_at" datetime not null default CURRENT_TIMESTAMP);
CREATE UNIQUE INDEX "queue_failed_jobs_uuid_unique" on "queue_failed_jobs" ("uuid");
CREATE TABLE IF NOT EXISTS "notifications" ("id" varchar not null, "type" varchar not null, "notifiable_type" varchar not null, "notifiable_id" integer not null, "data" text not null, "read_at" datetime, "created_at" datetime, "updated_at" datetime, primary key ("id"));
CREATE INDEX "notifications_notifiable_type_notifiable_id_index" on "notifications" ("notifiable_type", "notifiable_id");
CREATE TABLE IF NOT EXISTS "sync_status" ("kind" varchar not null, "reference" varchar, "remaining" integer, "updated" datetime, primary key ("kind"));
CREATE TABLE IF NOT EXISTS "audit_log" ("id" integer primary key autoincrement not null, "log_name" varchar, "description" text not null, "subject_type" varchar, "subject_id" integer, "causer_type" varchar, "causer_id" integer, "properties" text, "created_at" datetime, "updated_at" datetime, "event" varchar, "batch_uuid" varchar);
CREATE INDEX "audit_log_subject_index" on "audit_log" ("subject_type", "subject_id");
CREATE INDEX "audit_log_causer_index" on "audit_log" ("causer_type", "causer_id");
CREATE INDEX "audit_log_log_name_index" on "audit_log" ("log_name");
CREATE TABLE IF NOT EXISTS "media" ("id" integer primary key autoincrement not null, "model_type" varchar not null, "model_id" integer not null, "uuid" varchar, "collection_name" varchar not null, "name" varchar not null, "file_name" varchar not null, "mime_type" varchar, "disk" varchar not null, "conversions_disk" varchar, "size" integer not null, "manipulations" text not null, "custom_properties" text not null, "generated_conversions" text not null, "responsive_images" text not null, "order_column" integer, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "media_model_type_model_id_index" on "media" ("model_type", "model_id");
CREATE TABLE IF NOT EXISTS "auth_permissions" ("id" integer primary key autoincrement not null, "name" varchar not null, "guard_name" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "auth_roles" ("id" integer primary key autoincrement not null, "name" varchar not null, "display" integer not null, "guard_name" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "auth_model_permissions" ("permission_id" integer not null, "model_type" varchar not null, "model_id" integer not null, foreign key("permission_id") references "auth_permissions"("id") on delete cascade, primary key ("permission_id", "model_id", "model_type"));
CREATE INDEX "model_has_permissions_model_id_model_type_index" on "auth_model_permissions" ("model_id", "model_type");
CREATE TABLE IF NOT EXISTS "auth_model_roles" ("role_id" integer not null, "model_type" varchar not null, "model_id" integer not null, foreign key("role_id") references "auth_roles"("id") on delete cascade, primary key ("role_id", "model_id", "model_type"));
CREATE INDEX "model_has_roles_model_id_model_type_index" on "auth_model_roles" ("model_id", "model_type");
CREATE TABLE IF NOT EXISTS "auth_role_permissions" ("permission_id" integer not null, "role_id" integer not null, foreign key("permission_id") references "auth_permissions"("id") on delete cascade, foreign key("role_id") references "auth_roles"("id") on delete cascade, primary key ("permission_id", "role_id"));
CREATE TABLE IF NOT EXISTS "tags" ("id" integer primary key autoincrement not null, "name" text not null, "slug" text not null, "type" varchar, "order_column" integer, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "taggables" ("tag_id" integer not null, "taggable_type" varchar not null, "taggable_id" integer not null, foreign key("tag_id") references "tags"("id") on delete cascade);
CREATE INDEX "taggables_taggable_type_taggable_id_index" on "taggables" ("taggable_type", "taggable_id");
CREATE UNIQUE INDEX "taggables_tag_id_taggable_id_taggable_type_unique" on "taggables" ("tag_id", "taggable_id", "taggable_type");
CREATE TABLE IF NOT EXISTS "emulators" ("id" integer primary key autoincrement not null, "integration_id" varchar, "name" varchar, "handle" varchar, "description" text, "link" text, "game_hash_column" text, "order_column" integer, "active" tinyint(1) not null default '0', "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE UNIQUE INDEX "emulators_integration_id_unique" on "emulators" ("integration_id");
CREATE TABLE IF NOT EXISTS "system_emulators" ("id" integer primary key autoincrement not null, "system_id" integer not null, "emulator_id" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("system_id") references "Console"("ID") on delete cascade, foreign key("emulator_id") references "emulators"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "emulator_releases" ("id" integer primary key autoincrement not null, "emulator_id" integer not null, "version" varchar, "stable" tinyint(1) not null default '0', "minimum" tinyint(1) not null default '0', "notes" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("emulator_id") references "emulators"("id") on delete cascade);
CREATE UNIQUE INDEX "emulator_releases_emulator_id_version_unique" on "emulator_releases" ("emulator_id", "version");
CREATE TABLE IF NOT EXISTS "integration_releases" ("id" integer primary key autoincrement not null, "version" varchar not null, "stable" tinyint(1) not null default '0', "minimum" tinyint(1) not null default '0', "notes" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE UNIQUE INDEX "integration_releases_version_unique" on "integration_releases" ("version");
CREATE TABLE IF NOT EXISTS "triggers" ("id" integer primary key autoincrement not null, "triggerable_type" varchar not null, "triggerable_id" integer not null, "user_id" integer, "version" integer, "parent_id" integer, "conditions" text, "type" text, "stat" varchar, "stat_goal" varchar, "stat_format" varchar, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("user_id") references "UserAccounts"("ID") on delete set null);
CREATE INDEX "triggers_triggerable_type_triggerable_id_index" on "triggers" ("triggerable_type", "triggerable_id");
CREATE UNIQUE INDEX "triggers_triggerable_type_triggerable_id_version_unique" on "triggers" ("triggerable_type", "triggerable_id", "version");
CREATE TABLE IF NOT EXISTS "user_activities" ("id" integer primary key autoincrement not null, "user_id" integer not null, "type" varchar not null, "subject_type" varchar, "subject_id" integer, "subject_context" integer, "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "UserAccounts"("ID") on delete cascade);
CREATE INDEX "user_activities_subject_type_subject_id_index" on "user_activities" ("subject_type", "subject_id");
CREATE TABLE IF NOT EXISTS "user_connections" ("id" integer primary key autoincrement not null, "user_id" integer not null, "provider" varchar not null, "provider_user_id" varchar, "token" varchar, "token_secret" varchar, "refresh_token" varchar, "expires" varchar, "nickname" varchar, "name" varchar, "email" varchar, "avatar" varchar, "url" varchar, "raw" text, "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "UserAccounts"("ID") on delete cascade);
CREATE UNIQUE INDEX "user_connections_user_id_provider_provider_user_id_unique" on "user_connections" ("user_id", "provider", "provider_user_id");
CREATE INDEX "user_connections_provider_provider_user_id_index" on "user_connections" ("provider", "provider_user_id");
CREATE TABLE IF NOT EXISTS "game_sets" ("id" integer primary key autoincrement not null, "user_id" integer, "definition" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, "legacy_game_id" integer, foreign key("user_id") references "UserAccounts"("ID") on delete set null);
CREATE INDEX "game_sets_user_id_index" on "game_sets" ("user_id");
CREATE TABLE IF NOT EXISTS "game_set_games" ("id" integer primary key autoincrement not null, "game_set_id" integer not null, "game_id" integer not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("game_set_id") references "game_sets"("id") on delete cascade, foreign key("game_id") references "GameData"("ID") on delete cascade);
CREATE TABLE IF NOT EXISTS "achievement_authors" ("id" integer primary key autoincrement not null, "achievement_id" integer not null, "user_id" integer not null, "task" varchar, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("achievement_id") references "Achievements"("ID") on delete cascade, foreign key("user_id") references "UserAccounts"("ID") on delete cascade);
CREATE UNIQUE INDEX "achievement_authors_achievement_id_user_id_unique" on "achievement_authors" ("achievement_id", "user_id");
CREATE TABLE IF NOT EXISTS "achievement_sets" ("id" integer primary key autoincrement not null, "user_id" integer, "players_total" integer, "achievements_published" integer, "achievements_unpublished" integer, "points_total" integer, "points_weighted" integer, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, "players_hardcore" integer, foreign key("user_id") references "UserAccounts"("ID") on delete set null);
CREATE INDEX "achievement_sets_user_id_index" on "achievement_sets" ("user_id");
CREATE TABLE IF NOT EXISTS "achievement_set_achievements" ("id" integer primary key autoincrement not null, "achievement_set_id" integer not null, "achievement_id" integer not null, "order_column" integer, "created_at" datetime, "updated_at" datetime, foreign key("achievement_set_id") references "achievement_sets"("id") on delete cascade, foreign key("achievement_id") references "Achievements"("ID") on delete cascade);
CREATE UNIQUE INDEX "achievement_set_achievement_unique" on "achievement_set_achievements" ("achievement_set_id", "achievement_id");
CREATE TABLE IF NOT EXISTS "achievement_set_versions" ("id" integer primary key autoincrement not null, "achievement_set_id" integer not null, "version" integer, "definition" text, "players_total" integer, "achievements_published" integer, "achievements_unpublished" integer, "points_total" integer, "points_weighted" integer, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, "players_hardcore" integer, foreign key("achievement_set_id") references "achievement_sets"("id") on delete cascade);
CREATE UNIQUE INDEX "achievement_set_versions_achievement_set_id_version_unique" on "achievement_set_versions" ("achievement_set_id", "version");
CREATE TABLE IF NOT EXISTS "achievement_set_authors" ("id" integer primary key autoincrement not null, "achievement_set_id" integer not null, "user_id" integer not null, "task" varchar, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("achievement_set_id") references "achievement_sets"("id") on delete cascade, foreign key("user_id") references "UserAccounts"("ID") on delete cascade);
CREATE TABLE IF NOT EXISTS "game_achievement_sets" ("id" integer primary key autoincrement not null, "game_id" integer not null, "achievement_set_id" integer not null, "type" varchar, "title" varchar, "order_column" integer, "created_at" datetime, "updated_at" datetime, foreign key("game_id") references "GameData"("ID") on delete cascade, foreign key("achievement_set_id") references "achievement_sets"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "game_hash_sets" ("id" integer primary key autoincrement not null, "game_id" integer not null, "compatible" tinyint(1), "type" varchar, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("game_id") references "GameData"("ID") on delete cascade);
CREATE TABLE IF NOT EXISTS "game_hash_set_hashes" ("id" integer primary key autoincrement not null, "game_hash_set_id" integer not null, "game_hash_id" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("game_hash_set_id") references "game_hash_sets"("id") on delete cascade, foreign key("game_hash_id") references "game_hashes"("id") on delete cascade);
CREATE UNIQUE INDEX "game_hash_set_hashes_game_hash_set_id_game_hash_id_unique" on "game_hash_set_hashes" ("game_hash_set_id", "game_hash_id");
CREATE TABLE IF NOT EXISTS "player_sessions" ("id" integer primary key autoincrement not null, "user_id" integer, "game_hash_set_id" integer, "game_hash_id" integer, "game_id" integer, "hardcore" tinyint(1), "rich_presence" text, "rich_presence_updated_at" datetime, "duration" integer not null, "created_at" datetime, "updated_at" datetime, "user_agent" varchar, "ip_address" varchar, foreign key("user_id") references "UserAccounts"("ID") on delete set null, foreign key("game_id") references "GameData"("ID") on delete set null, foreign key("game_hash_set_id") references "game_hash_sets"("id") on delete set null, foreign key("game_hash_id") references "game_hashes"("id") on delete set null);
CREATE TABLE IF NOT EXISTS "player_achievements" ("id" integer primary key autoincrement not null, "user_id" integer not null, "achievement_id" integer not null, "trigger_id" integer, "player_session_id" integer, "unlocker_id" integer, "unlocked_at" datetime, "unlocked_hardcore_at" datetime, foreign key("achievement_id") references "Achievements"("ID") on delete cascade, foreign key("user_id") references "UserAccounts"("ID") on delete cascade, foreign key("trigger_id") references "triggers"("id") on delete set null, foreign key("player_session_id") references "player_sessions"("id") on delete set null, foreign key("unlocker_id") references "UserAccounts"("ID") on delete set null);
CREATE UNIQUE INDEX "player_achievements_user_id_achievement_id_unique" on "player_achievements" ("user_id", "achievement_id");
CREATE INDEX "player_achievements_unlocked_at_index" on "player_achievements" ("unlocked_at");
CREATE TABLE IF NOT EXISTS "leaderboard_entries" ("id" integer primary key autoincrement not null, "leaderboard_id" integer not null, "user_id" integer not null, "score" integer not null, "trigger_id" integer, "player_session_id" integer, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("user_id") references "UserAccounts"("ID") on delete cascade, foreign key("trigger_id") references "triggers"("id") on delete set null, foreign key("player_session_id") references "player_sessions"("id") on delete set null);
CREATE UNIQUE INDEX "leaderboard_entries_leaderboard_id_user_id_unique" on "leaderboard_entries" ("leaderboard_id", "user_id");
CREATE TABLE Forum (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, CategoryID BIGINT UNSIGNED DEFAULT NULL, Title VARCHAR(255) NOT NULL, Description VARCHAR(255) NOT NULL, LatestCommentID BIGINT UNSIGNED DEFAULT NULL, DisplayOrder INTEGER DEFAULT 0 NOT NULL, Created DATETIME DEFAULT NULL, Updated DATETIME DEFAULT NULL, "forumable_model" varchar, "forumable_id" integer, "deleted_at" datetime);
CREATE INDEX forums_forum_category_id_index ON Forum (CategoryID);
CREATE UNIQUE INDEX "forums_forumable_unique" on "Forum" ("forumable_model", "forumable_id");
CREATE INDEX "ratings_ratable_index" on "Rating" ("ratable_model", "ratable_id");
CREATE UNIQUE INDEX "ratings_user_rating_unique" on "Rating" ("User", "RatingObjectType", "RatingID");
CREATE INDEX "votes_votable_index" on "Votes" ("votable_model", "votable_id");
CREATE UNIQUE INDEX "votes_user_achievement_id_unique" on "Votes" ("User", "AchievementID");
CREATE INDEX "player_achievements_unlocked_hardcore_at_index" on "player_achievements" ("unlocked_hardcore_at");
CREATE INDEX "achievement_sets_players_total_index" on "achievement_sets" ("players_total");
CREATE INDEX "achievement_sets_players_hardcore_index" on "achievement_sets" ("players_hardcore");
CREATE INDEX "achievement_set_versions_players_total_index" on "achievement_set_versions" ("players_total");
CREATE INDEX "achievement_set_versions_players_hardcore_index" on "achievement_set_versions" ("players_hardcore");
CREATE TABLE player_achievement_sets (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, user_id INTEGER NOT NULL, achievement_set_id INTEGER NOT NULL, achievements_total INTEGER DEFAULT NULL, achievements_unlocked INTEGER DEFAULT NULL, achievements_unlocked_hardcore INTEGER DEFAULT NULL, completion_percentage NUMERIC(10, 9) DEFAULT NULL, completion_percentage_hardcore NUMERIC(10, 0) DEFAULT NULL, last_played_at DATETIME DEFAULT NULL, playtime_total INTEGER DEFAULT NULL, time_taken INTEGER DEFAULT NULL, time_taken_hardcore INTEGER DEFAULT NULL, completion_dates CLOB DEFAULT NULL, completion_dates_hardcore CLOB DEFAULT NULL, completed_at DATETIME DEFAULT NULL, completed_hardcore_at DATETIME DEFAULT NULL, last_unlock_at DATETIME DEFAULT NULL, last_unlock_hardcore_at DATETIME DEFAULT NULL, first_unlock_at DATETIME DEFAULT NULL, first_unlock_hardcore_at DATETIME DEFAULT NULL, points_total INTEGER DEFAULT NULL, points INTEGER DEFAULT NULL, points_weighted_total INTEGER DEFAULT NULL, points_weighted INTEGER DEFAULT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, "achievements_beat" integer, "achievements_beat_unlocked" integer, "achievements_beat_unlocked_hardcore" integer, "beaten_percentage" numeric, "beaten_percentage_hardcore" numeric, "beaten_dates" text, "beaten_dates_hardcore" text, "beaten_at" datetime, "beaten_hardcore_at" datetime, "points_hardcore" integer, FOREIGN KEY (achievement_set_id) REFERENCES achievement_sets (id) ON UPDATE NO ACTION ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE, FOREIGN KEY (user_id) REFERENCES UserAccounts (ID) ON UPDATE NO ACTION ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE);
CREATE UNIQUE INDEX player_achievement_sets_user_id_achievement_set_id_unique ON player_achievement_sets (user_id, achievement_set_id);
CREATE INDEX IDX_1FDB85E3F7EC4085 ON player_achievement_sets (achievement_set_id);
CREATE INDEX IDX_1FDB85E3A76ED395 ON player_achievement_sets (user_id);
CREATE TABLE IF NOT EXISTS "queue_job_batches" ("id" varchar not null, "name" varchar not null, "total_jobs" integer not null, "pending_jobs" integer not null, "failed_jobs" integer not null, "failed_job_ids" text not null, "options" text, "cancelled_at" integer, "created_at" integer not null, "finished_at" integer, primary key ("id"));
CREATE INDEX "player_achievements_achievement_id_user_id_unlocked_hardcore_at" on "player_achievements" ("achievement_id", "user_id", "unlocked_hardcore_at");
CREATE TABLE player_games (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, user_id INTEGER NOT NULL, game_id INTEGER NOT NULL, game_hash_id INTEGER DEFAULT NULL, achievements_total INTEGER DEFAULT NULL, achievements_unlocked INTEGER DEFAULT NULL, achievements_unlocked_hardcore INTEGER DEFAULT NULL, completion_percentage NUMERIC(10, 9) DEFAULT NULL, completion_percentage_hardcore NUMERIC(10, 0) DEFAULT NULL, last_played_at DATETIME DEFAULT NULL, playtime_total INTEGER DEFAULT NULL, time_taken INTEGER DEFAULT NULL, time_taken_hardcore INTEGER DEFAULT NULL, completion_dates CLOB DEFAULT NULL COLLATE "BINARY", completion_dates_hardcore CLOB DEFAULT NULL COLLATE "BINARY", completed_at DATETIME DEFAULT NULL, completed_hardcore_at DATETIME DEFAULT NULL, last_unlock_at DATETIME DEFAULT NULL, last_unlock_hardcore_at DATETIME DEFAULT NULL, first_unlock_at DATETIME DEFAULT NULL, first_unlock_hardcore_at DATETIME DEFAULT NULL, points_total INTEGER DEFAULT NULL, points INTEGER DEFAULT NULL, points_weighted_total INTEGER DEFAULT NULL, points_weighted INTEGER DEFAULT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, achievement_set_version_hash VARCHAR(255) DEFAULT NULL COLLATE "BINARY", achievements_beat INTEGER DEFAULT NULL, achievements_beat_unlocked INTEGER DEFAULT NULL, achievements_beat_unlocked_hardcore INTEGER DEFAULT NULL, beaten_percentage NUMERIC(10, 0) DEFAULT NULL, beaten_percentage_hardcore NUMERIC(10, 0) DEFAULT NULL, beaten_dates CLOB DEFAULT NULL COLLATE "BINARY", beaten_dates_hardcore CLOB DEFAULT NULL COLLATE "BINARY", beaten_at DATETIME DEFAULT NULL, beaten_hardcore_at DATETIME DEFAULT NULL, points_hardcore INTEGER DEFAULT NULL, "achievements_unlocked_softcore" integer, FOREIGN KEY (user_id) REFERENCES UserAccounts (ID) ON UPDATE NO ACTION ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE, FOREIGN KEY (game_id) REFERENCES GameData (ID) ON UPDATE NO ACTION ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE, FOREIGN KEY (game_hash_id) REFERENCES "game_hashes" (id) ON UPDATE NO ACTION ON DELETE SET NULL NOT DEFERRABLE INITIALLY IMMEDIATE);
CREATE INDEX player_games_game_id_user_id_index ON player_games (game_id, user_id);
CREATE INDEX player_games_game_id_achievement_set_version_hash_index ON player_games (game_id, achievement_set_version_hash);
CREATE INDEX IDX_40515077AABF27FD ON player_games (game_hash_id);
CREATE INDEX IDX_40515077E48FD905 ON player_games (game_id);
CREATE INDEX IDX_40515077A76ED395 ON player_games (user_id);
CREATE UNIQUE INDEX player_games_user_id_game_id_unique ON player_games (user_id, game_id);
CREATE INDEX player_games_created_at_index ON player_games (created_at);
CREATE INDEX "player_games_game_id_achievements_unlocked_index" on "player_games" ("game_id", "achievements_unlocked");
CREATE INDEX "player_games_game_id_achievements_unlocked_hardcore_index" on "player_games" ("game_id", "achievements_unlocked_hardcore");
CREATE INDEX "player_achievements_user_date_achievement" on "player_achievements" ("user_id", "unlocked_at", "unlocked_hardcore_at", "achievement_id");
CREATE INDEX "player_sessions_game_id_user_id_rich_presence_updated_at_index" on "player_sessions" ("game_id", "user_id", "rich_presence_updated_at");
CREATE INDEX "player_sessions_user_id_game_id_rich_presence_updated_at_index" on "player_sessions" ("user_id", "game_id", "rich_presence_updated_at");
CREATE TABLE IF NOT EXISTS "player_stats" ("id" integer primary key autoincrement not null, "user_id" integer not null, "system_id" integer, "type" varchar not null, "last_game_id" integer, "value" integer not null default '0', "created_at" datetime, "updated_at" datetime, "stat_updated_at" datetime, foreign key("user_id") references "UserAccounts"("ID") on delete cascade, foreign key("system_id") references "Console"("ID") on delete cascade, foreign key("last_game_id") references "GameData"("ID") on delete set null);
CREATE UNIQUE INDEX "player_stats_user_id_system_id_type_unique" on "player_stats" ("user_id", "system_id", "type");
CREATE INDEX "player_stats_user_id_index" on "player_stats" ("user_id");
CREATE INDEX "player_stats_system_id_index" on "player_stats" ("system_id");
CREATE INDEX "player_stats_type_index" on "player_stats" ("type");
CREATE TABLE IF NOT EXISTS "message_threads" ("id" integer primary key autoincrement not null, "title" varchar not null, "num_messages" integer not null default '0', "last_message_id" integer, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "message_thread_participants" ("id" integer primary key autoincrement not null, "thread_id" integer not null, "user_id" integer not null, "num_unread" integer not null default '0', "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("user_id") references "UserAccounts"("ID") on delete cascade, foreign key("thread_id") references "message_threads"("ID") on delete cascade);
CREATE TABLE IF NOT EXISTS "messages" ("id" integer primary key autoincrement not null, "thread_id" integer not null, "author_id" integer not null, "body" text, "created_at" datetime, "updated_at" datetime, foreign key("author_id") references "UserAccounts"("ID") on delete cascade, foreign key("thread_id") references "message_threads"("ID") on delete cascade);
CREATE UNIQUE INDEX "auth_roles_name_guard_name_unique" on "auth_roles" ("name", "guard_name");
CREATE TABLE UserAccounts (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, User VARCHAR(255) NOT NULL, SaltedPass VARCHAR(255) NOT NULL, EmailAddress VARCHAR(255) NOT NULL, Permissions INTEGER NOT NULL, RAPoints INTEGER NOT NULL, fbUser INTEGER NOT NULL, fbPrefs INTEGER DEFAULT NULL, cookie VARCHAR(255) DEFAULT NULL, appToken VARCHAR(255) DEFAULT NULL, appTokenExpiry DATETIME DEFAULT NULL, websitePrefs INTEGER UNSIGNED DEFAULT 0, LastLogin DATETIME DEFAULT NULL, LastActivityID INTEGER DEFAULT 0 NOT NULL, Motto VARCHAR(255) DEFAULT '' NOT NULL, ContribCount INTEGER DEFAULT 0 NOT NULL, ContribYield INTEGER DEFAULT 0 NOT NULL, APIKey VARCHAR(255) DEFAULT NULL, APIUses INTEGER DEFAULT 0 NOT NULL, LastGameID INTEGER DEFAULT 0 NOT NULL, RichPresenceMsg VARCHAR(255) DEFAULT NULL, RichPresenceMsgDate DATETIME DEFAULT NULL, ManuallyVerified INTEGER DEFAULT 0, UnreadMessageCount INTEGER DEFAULT NULL, TrueRAPoints INTEGER DEFAULT NULL, UserWallActive BOOLEAN DEFAULT 1 NOT NULL, PasswordResetToken VARCHAR(255) DEFAULT NULL, Untracked BOOLEAN DEFAULT 0 NOT NULL, email_backup VARCHAR(255) DEFAULT NULL, Created DATETIME DEFAULT NULL, Updated DATETIME DEFAULT NULL, Password VARCHAR(255) DEFAULT NULL, DeleteRequested DATETIME DEFAULT NULL, Deleted DATETIME DEFAULT NULL, RASoftcorePoints INTEGER DEFAULT 0, display_name VARCHAR(255) DEFAULT NULL, email_verified_at DATETIME DEFAULT NULL, remember_token VARCHAR(255) DEFAULT NULL, preferences CLOB DEFAULT NULL, country VARCHAR(255) DEFAULT NULL, timezone VARCHAR(255) DEFAULT NULL, locale VARCHAR(255) DEFAULT NULL, locale_date VARCHAR(255) DEFAULT NULL, locale_number VARCHAR(255) DEFAULT NULL, forum_verified_at DATETIME DEFAULT NULL, unranked_at DATETIME DEFAULT NULL, banned_at DATETIME DEFAULT NULL, muted_until DATETIME DEFAULT NULL, achievements_unlocked INTEGER DEFAULT NULL, achievements_unlocked_hardcore INTEGER DEFAULT NULL, completion_percentage_average NUMERIC(10, 0) DEFAULT NULL, completion_percentage_average_hardcore NUMERIC(10, 0) DEFAULT NULL, two_factor_secret CLOB DEFAULT NULL, two_factor_recovery_codes CLOB DEFAULT NULL, two_factor_confirmed_at DATETIME DEFAULT NULL);
CREATE INDEX users_apikey_index ON UserAccounts (APIKey);
CREATE INDEX users_apptoken_index ON UserAccounts (appToken);
CREATE INDEX users_points_weighted_unranked_at_index ON UserAccounts (TrueRAPoints, unranked_at);
CREATE INDEX users_points_softcore_unranked_at_index ON UserAccounts (RASoftcorePoints, unranked_at);
CREATE INDEX users_points_unranked_at_index ON UserAccounts (RAPoints, unranked_at);
CREATE INDEX users_unranked_at_index ON UserAccounts (unranked_at);
CREATE INDEX users_points_softcore_untracked_index ON UserAccounts (RASoftcorePoints, Untracked);
CREATE UNIQUE INDEX users_username_unique ON UserAccounts (User);
CREATE INDEX users_points_untracked_index ON UserAccounts (RAPoints, Untracked);
CREATE INDEX users_last_activity_id_index ON UserAccounts (LastActivityID);
CREATE INDEX users_untracked_points_index ON UserAccounts (Untracked, RAPoints);
CREATE INDEX users_points_weighted_untracked_index ON UserAccounts (TrueRAPoints, Untracked);
CREATE INDEX users_username_untracked_index ON UserAccounts (User, Untracked);
CREATE TABLE Comment (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, ArticleType INTEGER NOT NULL, ArticleID INTEGER NOT NULL, user_id BIGINT UNSIGNED DEFAULT NULL, Payload CLOB NOT NULL COLLATE "BINARY", Submitted DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, Edited DATETIME DEFAULT NULL, commentable_type VARCHAR(255) DEFAULT NULL COLLATE "BINARY", commentable_id INTEGER DEFAULT NULL, deleted_at DATETIME DEFAULT NULL);
CREATE INDEX comments_commentable_index ON Comment (commentable_type, commentable_id);
CREATE INDEX comment_articleid_index ON Comment (ArticleID);
CREATE TABLE Ticket (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, AchievementID BIGINT UNSIGNED DEFAULT NULL, reporter_id BIGINT UNSIGNED DEFAULT NULL, ReportType INTEGER NOT NULL, ReportNotes CLOB NOT NULL COLLATE "BINARY", ReportedAt DATETIME DEFAULT NULL, ResolvedAt DATETIME DEFAULT NULL, resolver_id BIGINT UNSIGNED DEFAULT NULL, ReportState INTEGER DEFAULT 1 NOT NULL, Updated DATETIME DEFAULT NULL, Hardcore BOOLEAN DEFAULT NULL, ticketable_model VARCHAR(255) DEFAULT NULL COLLATE "BINARY", ticketable_id INTEGER DEFAULT NULL, game_hash_set_id INTEGER DEFAULT NULL, player_session_id INTEGER DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, "ticketable_author_id" integer);
CREATE INDEX tickets_created_at_index ON Ticket (ReportedAt);
CREATE INDEX tickets_ticketable_index ON Ticket (ticketable_model, ticketable_id);
CREATE UNIQUE INDEX tickets_ticketable_reporter_id_index ON Ticket (ticketable_model, ticketable_id, reporter_id);
CREATE INDEX tickets_achievement_id_reporter_id_index ON Ticket (AchievementID, reporter_id);
CREATE TABLE IF NOT EXISTS "subscriptions" (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, subject_type VARCHAR(255) NOT NULL, subject_id INTEGER NOT NULL, user_id BIGINT UNSIGNED NOT NULL, state INTEGER NOT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL);
CREATE UNIQUE INDEX subscription_subjecttype_subjectid_userid_unique ON "subscriptions" (subject_type, subject_id, user_id);
CREATE UNIQUE INDEX "subscription_subject_type_subject_id_user_id_unique" on "subscriptions" ("subject_type", "subject_id", "user_id");
CREATE TABLE SetRequest (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, GameID BIGINT UNSIGNED NOT NULL, Updated DATETIME DEFAULT CURRENT_TIMESTAMP, user_id INTEGER DEFAULT NULL, type VARCHAR(255) DEFAULT NULL COLLATE "BINARY", created_at DATETIME DEFAULT NULL);
CREATE UNIQUE INDEX user_game_list_entry_user_id_game_id_type_unique ON SetRequest (user_id, GameID, type);
CREATE TABLE News (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Timestamp DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, Title VARCHAR(255) DEFAULT NULL COLLATE "BINARY", Payload CLOB NOT NULL COLLATE "BINARY", Link VARCHAR(255) DEFAULT NULL COLLATE "BINARY", Image VARCHAR(255) DEFAULT NULL COLLATE "BINARY", Updated DATETIME DEFAULT NULL, lead CLOB DEFAULT NULL COLLATE "BINARY", user_id INTEGER DEFAULT NULL, publish_at DATETIME DEFAULT NULL, unpublish_at DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL);
CREATE TABLE ForumTopic (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, ForumID BIGINT UNSIGNED DEFAULT NULL, Title VARCHAR(255) NOT NULL COLLATE "BINARY", author_id BIGINT UNSIGNED DEFAULT NULL, DateCreated DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, LatestCommentID BIGINT UNSIGNED DEFAULT NULL, RequiredPermissions INTEGER DEFAULT 0 NOT NULL, Updated DATETIME DEFAULT NULL, pinned_at DATETIME DEFAULT NULL, locked_at DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL);
CREATE INDEX forum_topics_forum_id_index ON ForumTopic (ForumID);
CREATE INDEX forum_topics_created_at_index ON ForumTopic (DateCreated);
CREATE TABLE GameData (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Title VARCHAR(80) DEFAULT NULL, ConsoleID INTEGER UNSIGNED DEFAULT NULL, ForumTopicID BIGINT UNSIGNED DEFAULT NULL, Flags INTEGER DEFAULT NULL, ImageIcon VARCHAR(255) DEFAULT '/Images/000001.png', ImageTitle VARCHAR(255) DEFAULT '/Images/000002.png', ImageIngame VARCHAR(255) DEFAULT '/Images/000002.png', ImageBoxArt VARCHAR(255) DEFAULT '/Images/000002.png', Publisher VARCHAR(255) DEFAULT NULL, Developer VARCHAR(255) DEFAULT NULL, Genre VARCHAR(255) DEFAULT NULL, Released VARCHAR(255) DEFAULT NULL, IsFinal INTEGER DEFAULT 0 NOT NULL, RichPresencePatch CLOB DEFAULT NULL, TotalTruePoints INTEGER DEFAULT 0 NOT NULL, Created DATETIME DEFAULT NULL, Updated DATETIME DEFAULT NULL, players_total INTEGER DEFAULT NULL, achievements_published INTEGER DEFAULT NULL, achievements_unpublished INTEGER DEFAULT NULL, points_total INTEGER DEFAULT NULL, released_at DATETIME DEFAULT NULL, releases CLOB DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, GuideURL VARCHAR(255) DEFAULT NULL, players_hardcore INTEGER DEFAULT NULL, achievement_set_version_hash VARCHAR(255) DEFAULT NULL, "released_at_granularity" varchar);
CREATE INDEX games_players_hardcore_index ON GameData (players_hardcore);
CREATE INDEX games_players_total_index ON GameData (players_total);
CREATE INDEX games_released_at_index ON GameData (released_at);
CREATE INDEX games_title_index ON GameData (Title);
CREATE UNIQUE INDEX games_title_system_id_unique ON GameData (Title, ConsoleID);
CREATE INDEX games_system_id_index ON GameData (ConsoleID);
CREATE TABLE IF NOT EXISTS "achievement_set_game_hashes" ("id" integer primary key autoincrement not null, "achievement_set_id" integer not null, "game_hash_id" integer not null, "compatible" tinyint(1) not null default '1', "created_at" datetime, "updated_at" datetime, foreign key("achievement_set_id") references "achievement_sets"("id") on delete cascade, foreign key("game_hash_id") references "game_hashes"("id") on delete cascade);
CREATE UNIQUE INDEX "set_hash_unique" on "achievement_set_game_hashes" ("achievement_set_id", "game_hash_id");
CREATE TABLE Achievements (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, GameID BIGINT UNSIGNED DEFAULT NULL, Title VARCHAR(255) NOT NULL COLLATE "BINARY", Description VARCHAR(255) DEFAULT NULL COLLATE "BINARY", MemAddr CLOB NOT NULL COLLATE "BINARY", Progress VARCHAR(255) DEFAULT NULL COLLATE "BINARY", ProgressMax VARCHAR(255) DEFAULT NULL COLLATE "BINARY", ProgressFormat VARCHAR(255) DEFAULT NULL COLLATE "BINARY", Points INTEGER DEFAULT 0 NOT NULL, Flags INTEGER DEFAULT 5 NOT NULL, DateCreated DATETIME DEFAULT NULL, DateModified DATETIME DEFAULT CURRENT_TIMESTAMP, VotesPos INTEGER DEFAULT 0 NOT NULL, VotesNeg INTEGER DEFAULT 0 NOT NULL, BadgeName VARCHAR(255) DEFAULT '00001' COLLATE "BINARY", DisplayOrder INTEGER DEFAULT 0 NOT NULL, AssocVideo VARCHAR(255) DEFAULT NULL COLLATE "BINARY", TrueRatio INTEGER DEFAULT 0 NOT NULL, Updated DATETIME DEFAULT NULL, user_id INTEGER DEFAULT NULL, unlocks_total INTEGER DEFAULT NULL, unlocks_hardcore_total INTEGER DEFAULT NULL, unlock_percentage NUMERIC(10, 0) DEFAULT NULL, unlock_hardcore_percentage NUMERIC(10, 0) DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, type VARCHAR(255) DEFAULT NULL COLLATE "BINARY");
CREATE INDEX achievements_game_id_published_index ON Achievements (GameID, Flags);
CREATE INDEX achievements_type_index ON Achievements (type);
CREATE INDEX achievements_gameid_index ON Achievements (GameID);
CREATE INDEX achievements_points_index ON Achievements (Points);
CREATE INDEX achievements_trueratio_index ON Achievements (TrueRatio);
CREATE TABLE Friends (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Friendship INTEGER NOT NULL, Created DATETIME DEFAULT NULL, Updated DATETIME DEFAULT NULL, user_id INTEGER DEFAULT NULL, related_user_id INTEGER DEFAULT NULL, status INTEGER DEFAULT NULL);
CREATE TABLE game_hashes (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, md5 VARCHAR(32) DEFAULT NULL COLLATE "BINARY", game_id BIGINT UNSIGNED NOT NULL, created_at DATETIME DEFAULT NULL, name VARCHAR(255) DEFAULT NULL COLLATE "BINARY", labels VARCHAR(255) DEFAULT NULL COLLATE "BINARY", system_id INTEGER DEFAULT NULL, hash VARCHAR(255) DEFAULT NULL COLLATE "BINARY", type VARCHAR(255) DEFAULT NULL COLLATE "BINARY", crc VARCHAR(255) DEFAULT NULL COLLATE "BINARY", sha1 VARCHAR(255) DEFAULT NULL COLLATE "BINARY", file_crc VARCHAR(255) DEFAULT NULL COLLATE "BINARY", file_md5 VARCHAR(255) DEFAULT NULL COLLATE "BINARY", file_sha1 VARCHAR(255) DEFAULT NULL COLLATE "BINARY", file_name_md5 VARCHAR(255) DEFAULT NULL COLLATE "BINARY", description VARCHAR(255) DEFAULT NULL COLLATE "BINARY", file_names CLOB DEFAULT NULL COLLATE "BINARY", file_size INTEGER DEFAULT NULL, parent_id INTEGER DEFAULT NULL, regions CLOB DEFAULT NULL COLLATE "BINARY", languages CLOB DEFAULT NULL COLLATE "BINARY", source VARCHAR(255) DEFAULT NULL COLLATE "BINARY", source_status VARCHAR(255) DEFAULT NULL COLLATE "BINARY", source_version VARCHAR(255) DEFAULT NULL COLLATE "BINARY", imported_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, compatibility VARCHAR(255) DEFAULT NULL COLLATE "BINARY", patch_url VARCHAR(255) DEFAULT NULL COLLATE "BINARY", user_id INTEGER DEFAULT NULL);
CREATE UNIQUE INDEX game_hashes_md5_unique ON game_hashes (md5);
CREATE UNIQUE INDEX game_hashes_system_id_hash_unique ON game_hashes (system_id, hash);
CREATE TABLE ForumTopicComment (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, ForumTopicID BIGINT UNSIGNED DEFAULT NULL, Payload CLOB NOT NULL COLLATE "BINARY", author_id BIGINT UNSIGNED DEFAULT NULL, DateCreated DATETIME DEFAULT NULL, DateModified DATETIME DEFAULT CURRENT_TIMESTAMP, Authorised INTEGER DEFAULT NULL, authorized_at DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL);
CREATE INDEX forum_topic_comments_created_at_index ON ForumTopicComment (DateCreated);
CREATE INDEX forum_topic_comments_forum_topic_id_index ON ForumTopicComment (ForumTopicID);
CREATE INDEX forum_topic_comments_author_id_created_at_index ON ForumTopicComment (author_id, DateCreated);
CREATE TABLE LeaderboardDef (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, GameID BIGINT UNSIGNED DEFAULT 0 NOT NULL, Mem CLOB NOT NULL COLLATE "BINARY", Format VARCHAR(50) DEFAULT '' COLLATE "BINARY", Title VARCHAR(255) DEFAULT 'Leaderboard Title' COLLATE "BINARY", Description VARCHAR(255) DEFAULT 'Leaderboard Description' COLLATE "BINARY", LowerIsBetter BOOLEAN DEFAULT 0 NOT NULL, DisplayOrder INTEGER DEFAULT 0 NOT NULL, Created DATETIME DEFAULT NULL, Updated DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, author_id INTEGER DEFAULT NULL);
CREATE INDEX leaderboards_game_id_index ON LeaderboardDef (GameID);
CREATE TABLE SetClaim (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, game_id BIGINT UNSIGNED NOT NULL, ClaimType INTEGER NOT NULL, SetType INTEGER NOT NULL, Status INTEGER NOT NULL, Extension INTEGER NOT NULL, Special INTEGER NOT NULL, Created DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, Finished DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, Updated DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, user_id INTEGER DEFAULT NULL);
CREATE TABLE SiteAwards (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, AwardDate DATETIME NOT NULL, AwardType INTEGER NOT NULL, AwardData INTEGER DEFAULT NULL, AwardDataExtra INTEGER DEFAULT 0 NOT NULL, DisplayOrder INTEGER DEFAULT 0 NOT NULL, user_id INTEGER DEFAULT NULL);
CREATE INDEX siteawards_user_id_index ON SiteAwards (user_id);
CREATE INDEX siteawards_awarddata_awardtype_awarddate_index ON SiteAwards (AwardData, AwardType, AwardDate);
CREATE INDEX siteawards_awardtype_index ON SiteAwards (AwardType);
CREATE INDEX "siteawards_user_id_awarddata_awardtype_awarddataextra_index" on "SiteAwards" ("user_id", "AwardData", "AwardType", "AwardDataExtra");
CREATE INDEX "player_games_game_id_achievements_unlocked_softcore_index" on "player_games" ("game_id", "achievements_unlocked_softcore");
CREATE TABLE memory_notes (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, game_id BIGINT UNSIGNED DEFAULT NULL, address INTEGER NOT NULL, user_id BIGINT UNSIGNED DEFAULT NULL, body CLOB DEFAULT NULL COLLATE "BINARY", created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, game_hash_set_id INTEGER DEFAULT NULL, deleted_at DATETIME DEFAULT NULL);
CREATE INDEX memory_notes_game_id_index ON memory_notes (game_id);
CREATE INDEX memory_notes_address_index ON memory_notes (address);
CREATE INDEX memory_notes_game_hash_set_id_address_index ON memory_notes (game_hash_set_id, address);
CREATE INDEX memory_notes_user_id_index ON memory_notes (user_id);
